version: "3.8"

services:
  doctor-service:
    build: ./doctor-service
    env_file: ./doctor-service/.env
    ports:
      - "3001:3000"
    depends_on:
      - doctor-db
    volumes:
      - ./doctor-service:/app
    networks:
      - mickroservices

  patient-service:
    build: ./patient-service
    env_file: ./patient-service/.env
    ports:
      - "3002:3000"
    depends_on:
      - patient-db
    volumes:
      - ./patient-service:/app
    networks:
      - mickroservices

  
  api-gateway:
    build: ./api-gateway
    env_file: ./api-gateway/.env
    ports:
      - "3000:3000"
    volumes:
      - ./api-gateway:/app
    networks:
      - mickroservices

  doctor-db:
    image: postgres:15
    container_name: doctor-db
    restart: always
    environment:
      POSTGRES_DB: doctor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - doctor-data:/var/lib/postgresql/data
    networks:
      - mickroservices

  patient-db:
    image: postgres:15
    container_name: patient-db
    restart: always
    environment:
      POSTGRES_DB: patient
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - patient-data:/var/lib/postgresql/data
    networks:
      - mickroservices

  admin-db:
    image: postgres:15
    container_name: admin-db
    restart: always
    environment:
      POSTGRES_DB: admin
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5435:5432"
    volumes:
      - admin-data:/var/lib/postgresql/data
    networks:
      - mickroservices

networks:
  mickroservices:

volumes:
  doctor-data:
  patient-data:
  admin-data:
